const hre = require("hardhat");
const { getSchemaRegistryContract } = require("../utils/contracts.js");

async function main() {
    console.log("\nüîç Obteniendo instancia del contrato SchemaRegistry...");

    const schemaRegistry = await getSchemaRegistryContract();

    const signers = await hre.ethers.getSigners();
    console.log(`üë§ Usando cuenta: ${signers}`);
    console.log(schemaRegistry);


    if (!schemaRegistry || !schemaRegistry.target) {
        console.error("‚ùå Error: El contrato SchemaRegistry no se inicializ√≥ correctamente.");
        return;
    }

    console.log(`üìú Direcci√≥n del contrato SchemaRegistry: ${schemaRegistry.target}`);

    // =============================
    // üü¢ REGISTRAR UN NUEVO ESQUEMA
    // =============================

    const schema = "string vchash";
    const resolver = hre.ethers.ZeroAddress;
    const isRevocable = true;

    console.log("\nüìù Registrando un nuevo esquema en el contrato...");
    try {
        const tx = await schemaRegistry.register(schema, resolver, isRevocable);
        console.log("üöÄ Transacci√≥n enviada:", tx);
        await tx.wait();
        console.log("‚úÖ Esquema registrado correctamente.");
    } catch (error) {
        console.error("‚ùå Error al registrar el esquema:", error.message);
    }

    // =============================
    // üîç CONSULTAR EVENTOS
    // =============================
    console.log("\nüîç Buscando eventos SchemaRegistered...");
    const logs = await schemaRegistry.queryFilter("SchemaRegistered");
    console.log(`üìú Eventos encontrados:`, logs);

    // =============================
    // üîµ CONSULTAR UN ESQUEMA
    // =============================

    console.log("\nüîç Consultando el esquema registrado...");
    try {
        await new Promise(resolve => setTimeout(resolve, 3000)); // Espera para indexaci√≥n
        const uid = hre.ethers.keccak256(hre.ethers.toUtf8Bytes(schema));
        const schemaData = await schemaRegistry.getSchema(uid);
        console.log(`üìÑ Esquema obtenido:`, schemaData);
    } catch (error) {
        console.error("‚ùå Error al obtener el esquema:", error.message);
    }
}

// Manejo de errores
main().catch((error) => {
    console.error("‚ùå Error en el script:", error);
    process.exitCode = 1;
});
